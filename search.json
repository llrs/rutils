[{"path":"https://llrs.github.io/rutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://llrs.github.io/rutils/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://llrs.github.io/rutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lluís Revilla Sancho. Author, maintainer.","code":""},{"path":"https://llrs.github.io/rutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Revilla Sancho L (2024). rutils: Helping day day work. R package version 0.0.1.9003, https://llrs.github.io/rutils/, https://github.com/llrs/rutils.","code":"@Manual{,   title = {rutils: Helping with my day to day work},   author = {Lluís {Revilla Sancho}},   year = {2024},   note = {R package version 0.0.1.9003, https://llrs.github.io/rutils/},   url = {https://github.com/llrs/rutils}, }"},{"path":"https://llrs.github.io/rutils/index.html","id":"rutils","dir":"","previous_headings":"","what":"Helping with my day to day work","title":"Helping with my day to day work","text":"goal rutils make easier setup reuse functions across computers jobs. packages intended used people might find interesting snippets, functions code.","code":""},{"path":"https://llrs.github.io/rutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helping with my day to day work","text":"can install development version rutils GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"llrs/rutils\")"},{"path":"https://llrs.github.io/rutils/index.html","id":"style","dir":"","previous_headings":"","what":"Style","title":"Helping with my day to day work","text":"Exported functions start llrs_","code":""},{"path":"https://llrs.github.io/rutils/reference/Bioinformatics.html","id":null,"dir":"Reference","previous_headings":"","what":"Bioinformatics — Bioinformatics","title":"Bioinformatics — Bioinformatics","text":"scripts present llrs/aligning. See functions llrs_cnag among others.","code":""},{"path":"https://llrs.github.io/rutils/reference/cnag_file.html","id":null,"dir":"Reference","previous_headings":"","what":"File names of the CNAG projects. — cnag_file","title":"File names of the CNAG projects. — cnag_file","text":"Create name files CNAG projects.","code":""},{"path":"https://llrs.github.io/rutils/reference/cnag_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File names of the CNAG projects. — cnag_file","text":"","code":"llrs_cnag_project_file(project, n = 1L, path = \"\")  llrs_cnag_stats_file(project, n = 1L, path = \"\")"},{"path":"https://llrs.github.io/rutils/reference/cnag_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File names of the CNAG projects. — cnag_file","text":"project Name project. n Integer value project (increasing 1). path Path file.","code":""},{"path":"https://llrs.github.io/rutils/reference/cnag_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File names of the CNAG projects. — cnag_file","text":"path stats file describing samples project.","code":""},{"path":"https://llrs.github.io/rutils/reference/cnag_file.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"File names of the CNAG projects. — cnag_file","text":"llrs_cnag_project_file(): Create project file path. llrs_cnag_stats_file(): Create project stats file path.","code":""},{"path":"https://llrs.github.io/rutils/reference/cnag_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File names of the CNAG projects. — cnag_file","text":"","code":"llrs_cnag_project_file(\"project\") #> [1] \"PROJECT_01/PROJECT_01.xls\" llrs_cnag_stats_file(\"project\") #> [1] \"PROJECT_01/PROJECT_01_Sample_Stats.xls\""},{"path":"https://llrs.github.io/rutils/reference/llrs_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create positions of a box — llrs_box","title":"Create positions of a box — llrs_box","text":"Create data.frame positions sample square box","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create positions of a box — llrs_box","text":"","code":"llrs_box(size)"},{"path":"https://llrs.github.io/rutils/reference/llrs_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create positions of a box — llrs_box","text":"size numeric value number rows columns.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create positions of a box — llrs_box","text":"data.frame rows columns.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create positions of a box — llrs_box","text":"","code":"box10 <- llrs_box(10) box9 <- llrs_box(9)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_aggr.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate several cellranger output — llrs_cellranger_aggr","title":"Aggregate several cellranger output — llrs_cellranger_aggr","text":"several samples processed llrs_cellranger_multi() might need aggregate .","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_aggr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate several cellranger output — llrs_cellranger_aggr","text":"","code":"llrs_cellranger_aggr(gex, path, vdj = NULL)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_aggr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate several cellranger output — llrs_cellranger_aggr","text":"gex data.frame GEX information. path path saved. vdj data.frame VDJ information.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_aggr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate several cellranger output — llrs_cellranger_aggr","text":"path file saved configuration","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create multi config file — llrs_cellranger_multi","title":"Create multi config file — llrs_cellranger_multi","text":"Prepare cellranger multi file samples.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create multi config file — llrs_cellranger_multi","text":"","code":"llrs_cellranger_multi(config, gex, library, samples, vdj, feature, out)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create multi config file — llrs_cellranger_multi","text":"config list general config samples. gex data.frame information gene expression (GEX). library data.frame information libraries used. samples data.frame information samples used. vdj list configuration vdj assays. feature list configuration featured assays. Path directory save file.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create multi config file — llrs_cellranger_multi","text":"path file saved configuration specified.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_multi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create multi config file — llrs_cellranger_multi","text":"https://www.10xgenomics.com/support/software/cell-ranger/latest/advanced/cr-multi-config-csv-opts","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/llrs_cellranger_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create multi config file — llrs_cellranger_multi","text":"","code":"#llrs_cellranger_multi(out = \"/S2_cellranger.csv\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_deliver.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the delivery file — llrs_cnag_deliver","title":"Read the delivery file — llrs_cnag_deliver","text":"Import delivery file information machine, application samples provided researcher.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_deliver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the delivery file — llrs_cnag_deliver","text":"","code":"llrs_cnag_deliver(path)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_deliver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the delivery file — llrs_cnag_deliver","text":"path Path project file.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_deliver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the delivery file — llrs_cnag_deliver","text":"data.frame information project name name fastq files project.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_deliver.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read the delivery file — llrs_cnag_deliver","text":"CNAG","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_deliver.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the delivery file — llrs_cnag_deliver","text":"","code":"# llrs_cnag_deliver(\"AUSER_01.xls\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare CNAG data for cellranger — llrs_cnag_files","title":"Prepare CNAG data for cellranger — llrs_cnag_files","text":"CNAG returns data format compatible cellranger. function merges data CNAG able prepare .","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare CNAG data for cellranger — llrs_cnag_files","text":"","code":"llrs_cnag_files(path)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare CNAG data for cellranger — llrs_cnag_files","text":"path Path file information delivery file.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare CNAG data for cellranger — llrs_cnag_files","text":"data.frame output names files (\"d1\" \"d2\") associated information.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare CNAG data for cellranger — llrs_cnag_files","text":"CNAG project assumed file path fastq files.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare CNAG data for cellranger — llrs_cnag_files","text":"","code":"# out <- llrs_cnag_cellranger(\"PROJECT_01.xls\") # out[, c(\"SAMPLE NAME\", \"d1\", \"cr1\", \"d1\", \"cr2\")]"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sample sheet from files — llrs_cnag_samples","title":"Create a sample sheet from files — llrs_cnag_samples","text":"Create sample sheet fastq.gz files easier creation sample sheets several programs (multiqc, fastqc, ...).","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sample sheet from files — llrs_cnag_samples","text":"","code":"llrs_cnag_samples(path)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sample sheet from files — llrs_cnag_samples","text":"path path folder containing files.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sample sheet from files — llrs_cnag_samples","text":"data.frame names files.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a sample sheet from files — llrs_cnag_samples","text":"Assumes paired end sequencing.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_samples.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a sample sheet from files — llrs_cnag_samples","text":"CNAG","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sample sheet from files — llrs_cnag_samples","text":"","code":"# llrs_cnag_samples(\"AUSER_01\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the CNAG stats — llrs_cnag_stats","title":"Read the CNAG stats — llrs_cnag_stats","text":"Read stats samples processed CNAG.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the CNAG stats — llrs_cnag_stats","text":"","code":"llrs_cnag_stats(path)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the CNAG stats — llrs_cnag_stats","text":"path Path excel file.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the CNAG stats — llrs_cnag_stats","text":"data.frame data name project file name.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read the CNAG stats — llrs_cnag_stats","text":"CNAG","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the CNAG stats — llrs_cnag_stats","text":"","code":"# llrs_cnag_stats(\"AUSER_01_Sample_Stats.xls\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_symlinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create symlinks — llrs_cnag_symlinks","title":"Create symlinks — llrs_cnag_symlinks","text":"Create symlinks cellranger format (see references).","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_symlinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create symlinks — llrs_cnag_symlinks","text":"","code":"llrs_cnag_symlinks(x, name, out_dir)"},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_symlinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create symlinks — llrs_cnag_symlinks","text":"x data.frame information. least c(\"LANE\", \"MULTIPLEX INDEX\", \"FLOWCELL\", \"d1\", \"d2\") columns must present. name name sample, can single character name column vector characters sample name file. out_dir Path folder files placed. NULL create symlinks folder.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_symlinks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create symlinks — llrs_cnag_symlinks","text":"Called side effect also returns data.frame.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_cnag_symlinks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create symlinks — llrs_cnag_symlinks","text":"https://www.10xgenomics.com/support/software/cell-ranger/latest/analysis/inputs/cr-specifying-fastqs#file-naming-convention","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Add column with — llrs_diff","title":"Add column with — llrs_diff","text":"Adds new column rows meet preference","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add column with — llrs_diff","text":"","code":"llrs_diff(   x,   p = \"pval\",   fc = \"diff\",   fdr = \"fdr\",   fdr_threshold = 0.05,   p_threshold = 0.05 )"},{"path":"https://llrs.github.io/rutils/reference/llrs_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add column with — llrs_diff","text":"x data.frame matrix differential results (DEG bioinformatics data) p name column p-values. fc name column fold change. fdr name column p-values corrected multiple comparison (usually FDR). fdr_threshold value decide classify . p_threshold value decide consider row","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add column with — llrs_diff","text":"matrix data.frame new column \"sign\" 5 possible values: c(\"UUP\", \"\", \"\", \"DW\", \"DDW\"). new column allows filter easily find relevant rows.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_diff.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add column with — llrs_diff","text":"limma recommends using B value instead ad-hoc test (popular among labs).","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file — llrs_download","title":"Download a file — llrs_download","text":"Download file","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file — llrs_download","text":"","code":"llrs_download(file, dest = \".\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file — llrs_download","text":"file Path file One Drive. dest Path file stored.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a file — llrs_download","text":"path file computer.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_figures.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates path for a figure — llrs_figures","title":"Creates path for a figure — llrs_figures","text":"creates standardized name figures checks standardized folders exist.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_figures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates path for a figure — llrs_figures","text":"","code":"llrs_figures(project, ...)"},{"path":"https://llrs.github.io/rutils/reference/llrs_figures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates path for a figure — llrs_figures","text":"project Name project used title. ... names/variables. extensions file included last element.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_figures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates path for a figure — llrs_figures","text":"path file folder","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_figures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates path for a figure — llrs_figures","text":"","code":"# llrs_figures(\"rutils\", \"pca\", \"sample1.png\") # llrs_figures(\"rutils\", \"pca\", \"sample whatever.png\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_hook.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert hook — llrs_hook","title":"Insert hook — llrs_hook","text":"Insert new hook (replace hooks expand ).","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_hook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert hook — llrs_hook","text":"","code":"llrs_hook(file, path = getwd())"},{"path":"https://llrs.github.io/rutils/reference/llrs_hook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert hook — llrs_hook","text":"file Name file used hook. path Path git repository.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_hook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert hook — llrs_hook","text":"logical value hook can placed .","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_hook.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Insert hook — llrs_hook","text":"https://git-scm.com/docs/githooks","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/llrs_hook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert hook — llrs_hook","text":"","code":"if (FALSE) { hooks <- llrs_hooks_list() llrs_hook(hooks[1], \"projects/git_something\") }"},{"path":"https://llrs.github.io/rutils/reference/llrs_hooks_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List existing hooks — llrs_hooks_list","title":"List existing hooks — llrs_hooks_list","text":"Check hooks package.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_hooks_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List existing hooks — llrs_hooks_list","text":"","code":"llrs_hooks_list(full.names = FALSE)"},{"path":"https://llrs.github.io/rutils/reference/llrs_hooks_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List existing hooks — llrs_hooks_list","text":"full.names logical value passed list.files","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_hooks_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List existing hooks — llrs_hooks_list","text":"character vector name hooks.","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/llrs_hooks_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List existing hooks — llrs_hooks_list","text":"","code":"llrs_hooks_list() #> [1] \"post-receive\" \"pre-push\""},{"path":"https://llrs.github.io/rutils/reference/llrs_notify_system.html","id":null,"dir":"Reference","previous_headings":"","what":"Use system's notify-send to send a message — llrs_notify_system","title":"Use system's notify-send to send a message — llrs_notify_system","text":"Creates pop message system run interactive session.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_notify_system.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use system's notify-send to send a message — llrs_notify_system","text":"","code":"llrs_notify_system(..., title, message = NULL, icon = NULL, urgency = NULL)"},{"path":"https://llrs.github.io/rutils/reference/llrs_notify_system.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use system's notify-send to send a message — llrs_notify_system","text":"... Ignored arguments (make compatible pipe) title Title message: character shorter 40 characters. message Message notification. icon Icon, pick system. urgency Urgency system","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_notify_system.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use system's notify-send to send a message — llrs_notify_system","text":"Always TRUE (even notification can created).","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_notify_system.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use system's notify-send to send a message — llrs_notify_system","text":"","code":"llrs_notify_system(title = \"Works\", message = \"My first message\") #> Warning: beep() could not play the sound due to the following error: #> Error in play.default(x, rate, ...): no audio drivers are available #> [1] TRUE"},{"path":"https://llrs.github.io/rutils/reference/llrs_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a R global user profile — llrs_profile","title":"Provide a R global user profile — llrs_profile","text":"Write preferences R user profile.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a R global user profile — llrs_profile","text":"","code":"llrs_profile()"},{"path":"https://llrs.github.io/rutils/reference/llrs_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a R global user profile — llrs_profile","text":"Whatever file.copy() ","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates path for results — llrs_results","title":"Creates path for results — llrs_results","text":"creates standardized name results checks standardized folders exist.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates path for results — llrs_results","text":"","code":"llrs_results(project, ...)"},{"path":"https://llrs.github.io/rutils/reference/llrs_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates path for results — llrs_results","text":"project Name project used title ... names/variables. extensions file included last element.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates path for results — llrs_results","text":"path file.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates path for results — llrs_results","text":"","code":"# llrs_results(\"rutils\", \"DEG\", \"limma\", \"a vs b.xlsx\") # llrs_results(\"rutils\", \"DEG\", \"pathways.xlsx\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_send_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a quick email — llrs_send_email","title":"Send a quick email — llrs_send_email","text":"Send quick email","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_send_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a quick email — llrs_send_email","text":"","code":"llrs_send_email(text, subject, to, attachments = NULL)"},{"path":"https://llrs.github.io/rutils/reference/llrs_send_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a quick email — llrs_send_email","text":"text Text email? subject subject email? Address send emails (CC BCC) attachments Paths files.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_send_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a quick email — llrs_send_email","text":"Called side effects","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_send_ntfy.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a message to the NTFY address — llrs_send_ntfy","title":"Send a message to the NTFY address — llrs_send_ntfy","text":"Send message NTFY address","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_send_ntfy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a message to the NTFY address — llrs_send_ntfy","text":"","code":"llrs_send_ntfy(message, title, ..., topic = NULL)"},{"path":"https://llrs.github.io/rutils/reference/llrs_send_ntfy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a message to the NTFY address — llrs_send_ntfy","text":"message Text sent. title Title notification. ... arguments used ntfy::ntfy_send() topic Send message default NTFY environment variable: \"NTFY_TOPIC\". Specify topic use default.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_send_ntfy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a message to the NTFY address — llrs_send_ntfy","text":"default httr response.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a link to a shared file — llrs_share","title":"Create a link to a shared file — llrs_share","text":"Uses credentials share link resource.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a link to a shared file — llrs_share","text":"","code":"llrs_share(path, type, expiry, password, scope)"},{"path":"https://llrs.github.io/rutils/reference/llrs_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a link to a shared file — llrs_share","text":"path path file type One c(\"view\", \"edit\", \"embed\"). expiry Time valid: \"x days\", \"x hours\". password Password protected ? scope know.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a link to a shared file — llrs_share","text":"link share resource","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create shiny app — llrs_shiny_create","title":"Create shiny app — llrs_shiny_create","text":"Create shiny app right place well set local git repository synchronize.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create shiny app — llrs_shiny_create","text":"","code":"llrs_shiny_create(project, path = \"~/ShinyApps/\", dest = \"/srv/shiny-server/\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create shiny app — llrs_shiny_create","text":"project Name project. can also multiple folders. path Path folder . dest Path shiny folder used serve website.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create shiny app — llrs_shiny_create","text":"Called side effects. open new RStudio project.","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_hook.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates new shiny app and add hooks. — llrs_shiny_hook","title":"Creates new shiny app and add hooks. — llrs_shiny_hook","text":"Creates new shiny app add hooks.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_hook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates new shiny app and add hooks. — llrs_shiny_hook","text":"","code":"llrs_shiny_hook(project, path = \"~/ShinyApps/\", dest = \"/srv/shiny-server/\")"},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_hook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates new shiny app and add hooks. — llrs_shiny_hook","text":"project Name project. can also multiple folders. path Path folder . dest Path shiny folder used serve website.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_shiny_hook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates new shiny app and add hooks. — llrs_shiny_hook","text":"logic value everything went smoothly.","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/llrs_tar.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions helping with targets — targets","title":"Functions helping with targets — targets","text":"Prepare target serve user","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_tar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions helping with targets — targets","text":"","code":"llrs_tar_load(name, ...)  llrs_tar_read(name, ...)"},{"path":"https://llrs.github.io/rutils/reference/llrs_tar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions helping with targets — targets","text":"name Name targets prepare load read. ... arguments passed around","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_tar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions helping with targets — targets","text":"Depending targets::tar_load() targets::tar_read() returns.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a file to Microsoft cloud in One Drive — llrs_upload","title":"Upload a file to Microsoft cloud in One Drive — llrs_upload","text":"Folders created exists.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a file to Microsoft cloud in One Drive — llrs_upload","text":"","code":"llrs_upload(file, dest)"},{"path":"https://llrs.github.io/rutils/reference/llrs_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a file to Microsoft cloud in One Drive — llrs_upload","text":"file File want upload. dest want save file.","code":""},{"path":"https://llrs.github.io/rutils/reference/llrs_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a file to Microsoft cloud in One Drive — llrs_upload","text":"id file uploaded","code":""},{"path":"https://llrs.github.io/rutils/reference/rstudio_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch between Rstudio configurations. — rstudio_configuration","title":"Switch between Rstudio configurations. — rstudio_configuration","text":"Switch Rstudio configurations.","code":""},{"path":"https://llrs.github.io/rutils/reference/rstudio_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch between Rstudio configurations. — rstudio_configuration","text":"","code":"llrs_rstudio_set()  llrs_rstudio_default()  llrs_rstudio_restore()"},{"path":"https://llrs.github.io/rutils/reference/rstudio_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch between Rstudio configurations. — rstudio_configuration","text":"Called side effects.","code":""},{"path":"https://llrs.github.io/rutils/reference/rstudio_config.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Switch between Rstudio configurations. — rstudio_configuration","text":"llrs_rstudio_set(): setup configuration. llrs_rstudio_default(): rename configuration restart RStudio, revert fresh Rstudio default configuration (useful teaching) double checking default options. llrs_rstudio_restore(): restore configuration.","code":""},{"path":"https://llrs.github.io/rutils/reference/rstudio_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch between Rstudio configurations. — rstudio_configuration","text":"","code":"if (FALSE) { llrs_rstudio_set() llrs_rstudio_default() llrs_rstudio_restore() }"},{"path":"https://llrs.github.io/rutils/reference/rutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rutils: Personal collection of functions to work with R — rutils-package","title":"rutils: Personal collection of functions to work with R — rutils-package","text":"rutils provides functions use every day situations. thought leightweight package many suggested dependencies.","code":""},{"path":[]},{"path":"https://llrs.github.io/rutils/reference/rutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rutils: Personal collection of functions to work with R — rutils-package","text":"Maintainer: Lluís Revilla Sancho lluis.revilla@gmail.com (ORCID)","code":""},{"path":"https://llrs.github.io/rutils/news/index.html","id":"rutils-development-version","dir":"Changelog","previous_headings":"","what":"rutils (development version)","title":"rutils (development version)","text":"Add functions manage CNAG projects cellranger multi.","code":""},{"path":"https://llrs.github.io/rutils/news/index.html","id":"rutils-001","dir":"Changelog","previous_headings":"","what":"rutils 0.0.1","title":"rutils 0.0.1","text":"Add targets functions. Add functions help CNAG projects. Add new function transcriptomics. Add new function file names.","code":""}]
